#!/bin/sh

# General .rc file for interactive shells

# If not running interactively, don't do anything
case $- in
    *i*);;      # interactive
    *) return;; # script 
esac

# Aliases (broken into own file as it has OS specific stuff)
if [ -f "$HOME/.shell/alias" ]; then
    . "$HOME/.shell/alias"
fi

# Source other stuff (broken into own file as it has OS specific stuff)
if [ -f "$HOME/.shell/source" ]; then
    . "$HOME/.shell/source"
fi

# For Xquartz
if command -v xhost &> /dev/null
then
  xhost +localhost
fi

# fancy prompt with starship
eval "$(starship init "$SHELL")"

# go test with color
gotestc() {
  go test "$@" | \
  sed "/PASS/s//$(printf '\033[32mPASS\033[0m')/" | \
  sed "/FAIL/s//$(printf '\033[31mFAIL\033[0m')/"
}

whereami() {
  echo "User        : $(whoami)"
  echo "Host        : $(hostname)"
  echo "OS          : $(uname -srm)"
  echo "Shell       : $SHELL"
  echo "Terminal    : $TERM"
  echo "Date        : $(date)"
  echo "Directory   : $(pwd)"
}

# Detect if in VS Code
in_vscode=false
if [ "$TERM_PROGRAM" = "vscode" ] || [ -n "$VSCODE_PID" ]; then
  in_vscode=true
fi

# Detect if in Vim or Neovim
in_vim=false
if [ -n "$VIM" ] || [ -n "$NVIM_LISTEN_ADDRESS" ]; then
  in_vim=true
fi

# Only auto-start tmux if not in tmux, VS Code, or Vim
if command -v tmux >/dev/null 2>&1 \
  && [ -z "$TMUX" ] \
  && [ -t 1 ] \
  && [ "$in_vscode" = false ] \
  && [ "$in_vim" = false ]; then
  exec tmux
fi
